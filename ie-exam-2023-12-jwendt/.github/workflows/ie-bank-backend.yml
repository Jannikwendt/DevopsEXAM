name: app-backend-jwendt #UPDATE WITH YOUR STUDENT ALIAS

on:
  workflow_dispatch:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/ie-bank-backend.yml'

env:
  BACKEND_WEBAPP_DEV: webapp-jwendt #Exercise III: set the name of your web app

jobs:
  build:
    
    runs-on: ubuntu-latest
    env:
      ENV: ghci

    steps:
      # Exercise III
      # GitHub action: Write step to checkout code.
        name: Checkout code
        uses: actions/checkout@v2

      # Exercise III
      # GitHub action: Write step to set up Python 3.11.
        name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: 3.11


      # Exercise III
      # GitHub action: Write step to upgrade Pytyon pip. Consider using the `working-directory: ./backend` setting
        name: Upgrade Python pip
        run: |
          python -m pip install --upgrade pip
        working-directory: ./backend 
    
      # Exercise III
      # GitHub action: Write step to install dependencies with pip. Consider using the `working-directory: ./backend` setting
        name: Install dependencies with pip
        run: |
          pip install -r requirements.txt
        working-directory: ./backend 

      # Exercise III
      # GitHub action: Write step to install flake8 and pytest, and use flake8 to check code syntax. Consider using the `working-directory: ./backend` setting
        name: Install flake8 and pytest
        run: |
          pip install flake8 pytest
        working-directory: ./backend 
      
        name: Check code syntax with flake8
        run: |
          flake8 .
        working-directory: ./backend 

      # Exercise III
      # GitHub action: Write step to run python tests with pytest. Consider using the `working-directory: ./backend` setting
        name: Run Python tests with pytest
        run: |
          pytest
        working-directory: ./backend 

      # Exercise III
      # GitHub action: Write step upload the packaged code as a GitHub artifact.
        name: Upload packaged code as GitHub artifact
        uses: actions/upload-artifact@v2
        with:
          name: backend-artifact
          path: ./backend
 
Now, let's move on to the deployment part in the deploy job:

yaml
Copy code
deploy:
  runs-on: ubuntu-latest
  needs: build
  environment:
    name: 'Development'
    url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

  steps:
    - name: Download build artifact
      uses: actions/download-artifact@v2
      with:
        name: backend-artifact
        path: ./backend

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.BACKEND_WEBAPP_DEV }}
        package: ./backend


  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      # Exercise IV
      # GitHub action: Write download build artifact
    
      # Exercise IV
      # GitHub action: Write step to login in to Azure. You can use the repository secret AZURE_CREDENTIALS

      # Exercise IV
      # GitHub action: Write step to deploy the downloaded artifact to your Azure web app
    
